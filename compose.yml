version: "3.9"

name: ziakhan_online_mart_api


services:
  # service 01 user_service_api
  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile.dev
    container_name: user_service_mart_cont
    volumes:
      - ./user_service:/code
    depends_on:
      - postgres_user_service_mart_db
    ports:
      - "8006:8006"

  # service 02 product_service_api
  product_service:
    build:
      context: ./product_service
      dockerfile: Dockerfile.dev
    container_name: product_service_mart_cont
    volumes:
      - ./product_service:/code
    depends_on:
      - postgres_product_service_mart_db
    ports:
      - "8007:8007"

  # service 03 payment_service_api
  payment_service:
    build:
      context: ./payment_service
      dockerfile: Dockerfile.dev
    container_name: payment_service_mart_cont
    volumes:
      - ./payment_service:/code
    depends_on:
      - postgres_payment_service_mart_db
    ports:
      - "8008:8008"

  # service 04 order_service_api
  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile.dev
    container_name: order_service_mart_cont
    volumes:
      - ./order_service:/code
    depends_on:
      - postgres_order_service_mart_db
    ports:
      - "8009:8009"

  # service 05 notification_service_api
  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile.dev
    container_name: notification_service_mart_cont
    volumes:
      - ./notification_service:/code
    depends_on:
      - postgres_notification_service_mart_db
    ports:
      - "8010:8010"

  # service 06 inventory_service_api
  inventory_service:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile.dev
    container_name: inventory_service_mart_cont
    volumes:
      - ./inventory_service:/code
      
    depends_on:
      - postgres_inventory_service_mart_db
    ports:
      - "8011:8011"
  ############  Database services  ################
  # service 07 db for user_service
  postgres_user_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_user_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=user_service_database
    ports:
      - '5406:5432'
    volumes:
      - postgres_user_service_mart_db:/var/lib/postgresql/data

  # service 08 db for product_service
  postgres_product_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_product_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=product_service_database
    ports:
      - '5407:5432'
    volumes:
      - postgres_product_service_mart_db:/var/lib/postgresql/data

  # service 09 db for payment_service
  postgres_payment_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_payment_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=payment_service_database
    ports:
      - '5408:5432'
    volumes:
      - postgres_payment_service_mart_db:/var/lib/postgresql/data

  # service 10 db for order_service
  postgres_order_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_order_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=order_service_database
    ports:
      - '5409:5432'
    volumes:
      - postgres_order_service_mart_db:/var/lib/postgresql/data

  # service 11 db for notification_service
  postgres_notification_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_notification_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=notification_service_database
    ports:
      - '5410:5432'
    volumes:
      - postgres_notification_service_mart_db:/var/lib/postgresql/data

  # service 12 db for inventory_service
  postgres_inventory_service_mart_db:
    image: postgres:latest
    restart: always
    container_name: Postgres_inventory_service_mart_Cont
    environment:
      - POSTGRES_USER=chzafar
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=inventory_service_database
    ports:
      - '5411:5432'
    volumes:
      - postgres_inventory_service_mart_db:/var/lib/postgresql/data

  # service 13 broker for apache kafka
  broker:
    image: apache/kafka:3.7.0
    hostname: ai_mart_broker
    container_name: ai_mart_broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  # service 14 kafka-ui
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-cont
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker



##############      volumes    ###################
volumes:
  # volume 01 for user db
  postgres_user_service_mart_db:
    driver: local

  # volume 02 for product db
  postgres_product_service_mart_db:
    driver: local

  # volume 03 for payment db
  postgres_payment_service_mart_db:
    driver: local

  # volume 04 for order db
  postgres_order_service_mart_db:
    driver: local

  # volume 05 for notification db
  postgres_notification_service_mart_db:
    driver: local

  # volume 06 for inventory db
  postgres_inventory_service_mart_db:
    driver: local



networks:
  default:
    driver: bridge